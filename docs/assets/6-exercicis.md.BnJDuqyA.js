import{_ as a,c as r,o as i,a4 as t}from"./chunks/framework.D91yMMqr.js";const p=JSON.parse('{"title":"Exercicis","description":"","frontmatter":{},"headers":[],"relativePath":"6-exercicis.md","filePath":"6-exercicis.md"}'),s={name:"6-exercicis.md"};function n(o,e,c,l,u,d){return i(),r("div",null,e[0]||(e[0]=[t('<h1 id="exercicis" tabindex="-1">Exercicis <a class="header-anchor" href="#exercicis" aria-label="Permalink to &quot;Exercicis&quot;">​</a></h1><h2 id="exercicis-nivell-basic" tabindex="-1">Exercicis - Nivell bàsic <a class="header-anchor" href="#exercicis-nivell-basic" aria-label="Permalink to &quot;Exercicis - Nivell bàsic&quot;">​</a></h2><h3 id="exercici-1" tabindex="-1">Exercici 1 <a class="header-anchor" href="#exercici-1" aria-label="Permalink to &quot;Exercici 1&quot;">​</a></h3><p><strong>a)</strong> Escriu un programa que, donat un nombre N introduït per teclat, mostre per pantalla tots els nombres de l’1 fins a N.<br><strong>b)</strong> Modifica’l perquè només mostre els nombres parells.<br><strong>c)</strong> Modifica’l perquè no mostre ni el 16 ni els múltiples de 3.</p><h3 id="exercici-2" tabindex="-1">Exercici 2 <a class="header-anchor" href="#exercici-2" aria-label="Permalink to &quot;Exercici 2&quot;">​</a></h3><p><strong>a)</strong> Crea un programa que vaja demanant números fins que es llija un 0.<br><strong>b)</strong> Afig una variable que comptabilitze quants números s&#39;han llegit.<br><strong>c)</strong> Mostra quants d&#39;eixos han sigut positius.<br><strong>d)</strong> Mostra la mitjana de tots els números llegits (sense comptar el 0 final).</p><h3 id="exercici-3" tabindex="-1">Exercici 3 <a class="header-anchor" href="#exercici-3" aria-label="Permalink to &quot;Exercici 3&quot;">​</a></h3><p><strong>a)</strong> Escriu un programa que calcule i mostre el factorial d&#39;un número N, introduït per teclat.<br><strong>b)</strong> Permet que es torne a demanar el valor de N fins que siga un número positiu.<br><strong>c)</strong> Afig una funcionalitat que mostre la seqüència de multiplicacions que es fan.</p><h2 id="exercicis-nivell-mitja" tabindex="-1">Exercicis - Nivell mitjà <a class="header-anchor" href="#exercicis-nivell-mitja" aria-label="Permalink to &quot;Exercicis - Nivell mitjà&quot;">​</a></h2><h3 id="exercici-4" tabindex="-1">Exercici 4 <a class="header-anchor" href="#exercici-4" aria-label="Permalink to &quot;Exercici 4&quot;">​</a></h3><p>Un grup d’amics ha fet un torneig i vol enregistrar les puntuacions.</p><p><strong>a)</strong> El programa demana el nom i puntuació de 4 jugadors i mostra qui ha aconseguit la puntuació més alta.<br><strong>b)</strong> Mostra la mitjana de les puntuacions.<br><strong>c)</strong> Si hi ha alguna puntuació inferior a 5, mostra &quot;Cal millorar&quot; per a eixos jugadors.</p><h3 id="exercici-5" tabindex="-1">Exercici 5 <a class="header-anchor" href="#exercici-5" aria-label="Permalink to &quot;Exercici 5&quot;">​</a></h3><p>En un centre d’atenció telefònica volen saber quants clients han valorat negativament el servei.</p><p><strong>a)</strong> Escriu un programa que llig per teclat 10 valoracions numèriques (−5 a +5) i indique si hi ha hagut algun negatiu.<br><strong>b)</strong> Modifica’l perquè també compte i mostre quants són positius, quants negatius i quants neutres (valoració de 0).<br><strong>c)</strong> Afig un missatge en cas que tots siguen positius: “Excel·lent!”<br><strong>d)</strong> Si algun és −5, afegir “Revisió urgent necessària”.</p><h3 id="exercici-6" tabindex="-1">Exercici 6 <a class="header-anchor" href="#exercici-6" aria-label="Permalink to &quot;Exercici 6&quot;">​</a></h3><p>Volem controlar les despeses mensuals d’una casa.</p><p><strong>a)</strong> El programa ha de demanar tres despeses (llum, aigua i menjar) i mostrar el total mensual.<br><strong>b)</strong> S’amplia el programa per a demanar també una quarta despesa opcional (altres), i mostrar-la només si és major que 0.<br><strong>c)</strong> S’amplia el programa per mostrar un resum amb percentatges de cada despesa sobre el total.</p><h2 id="exercicis-nivell-avancat" tabindex="-1">Exercicis - Nivell avançat <a class="header-anchor" href="#exercicis-nivell-avancat" aria-label="Permalink to &quot;Exercicis - Nivell avançat&quot;">​</a></h2><h3 id="exercici-7" tabindex="-1">Exercici 7 <a class="header-anchor" href="#exercici-7" aria-label="Permalink to &quot;Exercici 7&quot;">​</a></h3><p>En una biblioteca universitària volen digitalitzar el sistema de control de préstecs. Cada llibre té un codi, un títol i una data de devolució prevista. El programa ha de gestionar la llista de préstecs oberts i calcular possibles recàrrecs per retràs.</p><p><strong>a)</strong> Demana a l’usuari el codi i el títol d’un llibre, i la data de devolució prevista (dia, mes, any). Mostra-ho tot per pantalla.<br><strong>b)</strong> Afig la data d’avui i calcula si el llibre està endarrerit (data avui &gt; data devolució). Mostra per pantalla tant si està endarrerit com si no.</p><ul><li>Considera que un mes té 30 dies, i un any té 365 dies.</li><li>Comprova en ordre: any, mes, dia.</li></ul><p><strong>c)</strong> Si hi ha retràs, calcula el nombre de dies de retard i mostra un recàrrec de 0,50 € per dia.<br><strong>d)</strong> Permet introduir diversos préstecs fins que l’usuari escriga &quot;fi&quot;, i acumula el total de recàrrecs.<br><strong>e)</strong> Al final, mostra un resum: nombre de llibres prestat­s, llibres endarrerits i recàrrecs totals.</p><div class="tip custom-block"><p class="custom-block-title">NOTA:</p><p>Per a comparar un String amb la cadena &quot;fi&quot;, usa la següent instrucció:<br><code>cadena.equals(&quot;fi&quot;)</code><br> Aquesta expressió retorna <code>true</code> si el valor de cadena és igual a &quot;fi&quot;, i <code>false</code> en cas contrari. No és correcte usar la doble igualtat <code>==</code> per motius que es voran més endavant.</p></div><h3 id="exercici-8" tabindex="-1">Exercici 8 <a class="header-anchor" href="#exercici-8" aria-label="Permalink to &quot;Exercici 8&quot;">​</a></h3><p>Un departament acadèmic vol un programa que calcule la nota final d’un alumne tenint en compte exàmens, pràctiques i treballs. Cada tipus té un pes diferent: exàmens 50 %, pràctiques 30 % i treballs 20 %. A més, si algun dels tres components està per sota de 4, l’alumne suspendrà automàticament.</p><p><strong>a)</strong> Demana les tres notes (0–10) i calcula la nota ponderada simple.<br><strong>b)</strong> Afig la comprovació: si alguna nota &lt; 4, mostra “Suspens automàtic”.<br><strong>c)</strong> Si no hi ha suspens automàtic, mostra “Aprovat” o “Excel·lent” si la nota final ≥ 9.<br><strong>d)</strong> Permet repetir el càlcul per a diversos alumnes fins que l’usuari introduïsca &quot;fi&quot;.<br><strong>e)</strong> Al final, mostra quants alumnes han aprovat, han suspés per nota baixa i quants han obtingut Excel·lent.</p><h3 id="exercici-9" tabindex="-1">Exercici 9 <a class="header-anchor" href="#exercici-9" aria-label="Permalink to &quot;Exercici 9&quot;">​</a></h3><p>Una empresa de serveis vol automatitzar la facturació mensual en funció de l’ús i aplicar trams de tarifes i un IVA específic. El cost per unitat varia segons consums:</p><ul><li>Fins a 100 unitats: 0,10 €</li><li>De 101 a 500: 0,08 €</li><li>Més de 500: 0,05 €</li></ul><p>A més, s’aplica un IVA del 21 %.</p><p><strong>a)</strong> Demana el consum mensual (unitats) i calcula el cost base sense IVA.<br><strong>b)</strong> Aplica l’IVA i mostra el total amb IVA inclòs.<br><strong>c)</strong> Afig un descompte del 5 % si el consum supera les 1000 unitats (sobre el total amb IVA).<br><strong>d)</strong> Permet facturar per a diversos clients fins que l’usuari introduïsca &quot;fi&quot;, i acumula el total facturat.<br><strong>e)</strong> Mostra un resum: nombre de factures, ingressos bruts, total d’IVA i total de descomptes aplicats.</p><h3 id="exercici-10" tabindex="-1">Exercici 10 <a class="header-anchor" href="#exercici-10" aria-label="Permalink to &quot;Exercici 10&quot;">​</a></h3><p>Una botiga de mobles en línia necessita un programa per processar comandes i controlar l’inventari. Tenen un catàleg de productes amb codi (1, 2 o 3), nom, preu i estoc disponible. Quan l’usuari fa una comanda, cal restar unitats i calcular el total.</p><p><strong>a)</strong> Carrega un inventari inicial de tres productes (taules, cadires i armaris) amb estoc inicial de 100 cadascun, i mostra’n la llista.<br><strong>b)</strong> Permet fer una comanda: l’usuari introdueix codi de producte i quantitat; si no hi ha estoc suficient, mostra “Estoc insuficient”. Si el codi no correspon a ningun producte, mostra &quot;Codi incorrecte&quot;.<br><strong>c)</strong> Permet a l&#39;usuari fer tantes comandes com vulga, fins que el codi introduït siga 0. En cada comanda es descompten les unitats corresponents de l&#39;inventari.<br><strong>d)</strong> Si, en fer una comanda, algun producte no té suficient unitats a l&#39;inventari, mostrarà un missatge per pantalla.<br><strong>e)</strong> Després de la comanda, mostra quins productes han quedat amb estoc 0.<br><strong>f)</strong> Al final escriu un informe del valor total venut i productes esgotats.</p>',36)]))}const g=a(s,[["render",n]]);export{p as __pageData,g as default};
